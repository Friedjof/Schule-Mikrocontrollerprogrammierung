C51 COMPILER V9.60.0.0   MAIN                                                              12/14/2021 20:56:53 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN main.OBJ
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND TABS(2)

line level    source

   1          /*****************************************************************************
   2          h e i n r i c h -h e r t z -b e r u f s k o l l e g  d e r  s t a d t  b o n n
   3          Autor:      Friedjof Noweck
   4          Klasse:     IH119
   5          Datum:      2021-12-10
   6          Datei:      main.c
   7          Einsatz:    
   8          Beschreibung: can conroll the 7 segment display
   9          Funktionen:   display numbers on 7 segment displays
  10          ******************************************************************************
  11          Aenderungen:
  12          2021-12-10 init project + add simple functions
  13          2021-12-14 work on the functions
  14          
  15          *****************************************************************************/
  16          /******************* Text im Quelltext einbinden *********************/
  17          #include "REG517A.h"
  18          
  19          /*************************** Konstanten ******************************/
  20          
  21          
  22          /*********************** globale Variablen ***************************/
  23          
  24          
  25          /************************** Prototypen *******************************/
  26          void set_number(char nr, char segment);
  27          void set_numbers(int nrs);
  28          char potenzieren(int basis, int potenz);
  29          
  30          /************************ Hauptprogramm ******************************/
  31          
  32          void main()
  33          {
  34   1        set_numbers(1234);
  35   1      }
  36          
  37          void set_numbers(int nrs)
  38          {
  39   1        int segment = 0;
  40   1        
  41   1        for (segment = 0; segment < 4; segment++)
  42   1        {
  43   2          set_number(nrs % 10, segment);
  44   2          nrs /= 10;
  45   2        }
  46   1      }
  47          
  48          void set_number(char nr, char segment)
  49          {
  50   1        nr = nr;
  51   1        
  52   1        P6 = P6 | potenzieren(2, segment + 4);
  53   1        
  54   1        if (nr == 0)
  55   1        {
C51 COMPILER V9.60.0.0   MAIN                                                              12/14/2021 20:56:53 PAGE 2   

  56   2          P4 = P4 | 0xFB;
  57   2        }
  58   1        else if(nr == 1)
  59   1        {
  60   2          P4 = P4 | 0xC2;
  61   2        }
  62   1        else if(nr == 2)
  63   1        {
  64   2          P4 = P4 | 0x5F;
  65   2        }
  66   1        else if(nr == 3)
  67   1        {
  68   2          P4 = P4 | 0xCF;
  69   2        }
  70   1        else if(nr == 4)
  71   1        {
  72   2          P4 = P4 | 0xE6;
  73   2        }
  74   1        else if(nr == 5)
  75   1        {
  76   2          P4 = P4 | 0xED;
  77   2        }
  78   1        else if(nr == 6)
  79   1        {
  80   2          P4 = P4 | 0xFD;
  81   2        }
  82   1        else if(nr == 7)
  83   1        {
  84   2          P4 = P4 | 0xEB;
  85   2        }
  86   1        else if(nr == 8)
  87   1        {
  88   2          P4 = P4 | 0xFF;
  89   2        }
  90   1        else if(nr == 9)
  91   1        {
  92   2          P4 = P4 | 0xEF;
  93   2        }
  94   1        else
  95   1        { }
  96   1      }
  97          
  98          char potenzieren(int basis, int potenz)
  99          {
 100   1        // init index
 101   1        int positivePotenz = potenz;
 102   1        int index = 0;
 103   1        char zwischenergebnis = 1;
 104   1      
 105   1        if (potenz < 0) {
 106   2          positivePotenz = potenz * (-1);
 107   2        }
 108   1      
 109   1        // die Potenz in einer for-Schleife berechnen
 110   1        for (index = 0; index < positivePotenz; index = index + 1)
 111   1        {
 112   2          // das Zwischenergebnis wird in der Variablen "zwischenergebnis" gespeichert
 113   2          zwischenergebnis = zwischenergebnis * basis;
 114   2        }
 115   1      
 116   1        return zwischenergebnis;
 117   1      }
C51 COMPILER V9.60.0.0   MAIN                                                              12/14/2021 20:56:53 PAGE 3   



MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    260    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       7
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
